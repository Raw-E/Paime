# Import the OpenAI library to interact with the OpenAI API
from openai import OpenAI


# Define a class to encapsulate the functionality of interacting with the OpenAI API
class OpenAIClient:
    """
    A client for interacting with the OpenAI API, specifically for generating responses
    from a language model.
    """

    def __init__(self):
        """
        Initializes the OpenAIClient instance by creating an OpenAI client object.
        This client will be used for all interactions with the OpenAI API.
        """
        self.client = OpenAI()

    def get_response_from_llm(self, messages, model="gpt-4-0125-preview", temperature=0.7):
        """
        Fetches a response from the specified language model based on the input messages.

        Parameters:
        - messages (list): A list of dictionaries, where each dictionary represents a message
                           to send to the language model. Each message should adhere to the format
                           expected by the OpenAI API.
        - model (str): The identifier of the language model to use for generating responses.
                       Defaults to "gpt-4-0125-preview".
        - temperature (float): A parameter controlling the randomness of the response generation.
                               Higher values lead to more varied responses. Defaults to 0.7.

        Returns:
        - str: The content of the response message generated by the language model.
        """
        # Make a request to the OpenAI API to generate a response based on the provided messages,
        # using the specified model and temperature settings.
        response = self.client.chat.completions.create(messages=messages, model=model, temperature=temperature)

        # Return the content of the first response message from the list of choices.
        # The API may provide multiple choices, but here we are interested only in the first one.
        return response.choices[0].message.content
